NAME := oracle-xe
CHART_REPO := .
CHART_NAME := oracle-xe
IMAGE := datagrip/oracle:11.2

# Default namespace
ifndef NAMESPACE
	NAMESPACE=default
endif

# External IP
ifndef EXTERNAL_IP
	EXTERNAL_IP=$(shell ping -c 1 oracle.kube.local | grep "^PING" | sed -e "s/.* (//;s/).*//")
endif
ifndef EXTERNAL_IP
    EXTERNAL_IP=$(shell kubectl get nodes -o wide | awk 'NR==2{print $$6}')
endif


default: status

.PHONY: check
check:
	helm upgrade \
		--install \
		--dry-run \
		--debug \
		--namespace=$(NAMESPACE) \
		--values values.yaml \
		--set fullnameOverride=$(NAME) \
		--set service.externalIPs='{$(EXTERNAL_IP)}' \
		--set image.name=$(IMAGE) \
		$(NAMESPACE)-$(NAME) $(CHART_REPO)/$(CHART_NAME)

.PHONY: template
template:
	helm template --name=$(NAME) \
		--namespace=$(NAMESPACE) \
		--values values.yaml \
		--set fullnameOverride=$(NAME) \
		--set service.externalIPs='{$(EXTERNAL_IP)}' \
		--set image.name=$(IMAGE) \
		$(CHART_REPO)/$(CHART_NAME)

.PHONY: install
install:
	helm upgrade \
		--install \
		--wait \
		--namespace=$(NAMESPACE) \
		--values values.yaml \
		--set fullnameOverride=$(NAME) \
		--set service.externalIPs='{$(EXTERNAL_IP)}' \
		--set image.name=$(IMAGE) \
		$(NAMESPACE)-$(NAME) $(CHART_REPO)/$(CHART_NAME)

.PHONY: status
status:
	@echo "\n*** Checking status ***"
	@if [ "`helm version | grep v2`" ]; then \
		helm ls $(NAMESPACE)-$(NAME); \
		helm status $(NAMESPACE)-$(NAME); \
	else \
		helm -n $(NAMESPACE) ls; \
		helm -n $(NAMESPACE) status $(NAMESPACE)-$(NAME); \
	fi

.PHONY: connect
connect:
	@echo "\n*** Connecting to Oracle XE database ***"
	@echo sqlplus system/oracle@oracle.kube.local
	@sqlplus system/oracle@$(EXTERNAL_IP)

.PHONY: version
version:
	@grep "name:" $(CHART_NAME)/Chart.yaml | awk '{printf("./'$(CHART_NAME)'/%s   ", $$2)}'
	@grep "version:" $(CHART_NAME)/Chart.yaml | awk '{printf("%s   ", $$2)}'
	@grep "appVersion:" $(CHART_NAME)/Chart.yaml | awk '{printf("%s   ", $$2)}'
	@grep "description:" $(CHART_NAME)/Chart.yaml | cut -f2- -d" "

.PHONY: uninstall
uninstall:
	@if [ "`helm version | grep v2`" ]; then \
		helm ls $(NAMESPACE)-$(NAME); \
		helm del --purge $(NAMESPACE)-$(NAME) ||:; \
	else \
		helm -n $(NAMESPACE) ls -a; \
		helm -n $(NAMESPACE) uninstall $(NAMESPACE)-$(NAME) ||:; \
	fi

.PHONY: clean
clean:
