#!/usr/bin/env bash

mount_disk() {
    for TRY in 2 4 8 16 32 64 128
    do
        sleep $TRY
        mount "$@"
        [ "$(ls "${!#}")" ] && break
        # Rescan for removable storage devices
        for SCAN in $(grep usb-storage /sys/class/scsi_host/host*/proc_name | sed -e "s@/proc_name.*@/scan@"); do
            echo - - - > $SCAN
        done
    done
}


# No Network Manager
{% if dhclient_call %}
dhclient $(ifconfig -s -a | grep -E "^(eth|enp)" | awk '{print $1}') &
{% else %}
##dhclient $(ifconfig -s -a | grep -E "^(eth|enp)" | awk '{print $1}') &
{% endif %}

# Setup mounts
mount -t tmpfs -o noatime tmpfs /shared &
{% if data2_mount %}
mount_disk {{ data2_mount }} &
{% else %}
##mount_disk -t ext4 -o noatime,errors=remount-ro,commit=60 UUID=<uuid-from-blkid> /mnt/data2 &
{% endif %}
{% if vbox_shared %}
mount -t vboxsf -o uid=owner,gid=users Shared /mnt/host &
{% else %}
##mount -t vboxsf -o uid=owner,gid=users Shared /mnt/host &
{% endif %}
{% if clamav_directory is defined %}
mount -o bind {{ clamav_directory }} /var/lib/clamav
{% else %}
##mount -o bind /mnt/data1/var/lib/clamav /var/lib/clamav
{% endif %}
{% if docker_daemon %}
mkdir -p -m 700 /tmp/.docker && mount -o bind /tmp/.docker /var/lib/docker/tmp
{% else %}
##mkdir -p -m 700 /tmp/.docker && mount -o bind /tmp/.docker /var/lib/docker/tmp
{% endif %}

# Setup ZRAM swap (zramctl)
{% if zram_swap %}
modprobe zram num_devices=1
RAM=$(awk '/MemTotal/{print $2}' /proc/meminfo)
echo ${RAM}K > /sys/block/zram0/disksize
echo $(($RAM/2))K > /sys/block/zram0/mem_limit
mkswap /dev/zram0
swapon -p 100 /dev/zram0
{% else %}
##modprobe zram num_devices=1
##RAM=$(awk '/MemTotal/{print $2}' /proc/meminfo)
##echo ${RAM}K > /sys/block/zram0/disksize
##echo $(($RAM/2))K > /sys/block/zram0/mem_limit
##mkswap /dev/zram0
##swapon -p 100 /dev/zram0
{% endif %}

exit 0
