version: '1.0'

stages:
- default
- build

steps:

  setup_config:
    stage: default
    title: Determine build configurations
    image: codefresh/cli:latest
    entry_point: /bin/sh
    commands:
    - cf_export RELEASE_VERSION=$(git describe --tags --match "v[0-9]*" --long)

  prepare:
    stage: build
    type: parallel
    steps:
      check_config:
        title: Show build configurations
        image: codefresh/cli:latest
        entry_point: /bin/sh
        commands:
        - echo "CF_PULL_REQUEST_NUMBER=$CF_PULL_REQUEST_NUMBER"
        - echo "CF_PULL_REQUEST_ACTION=$CF_PULL_REQUEST_ACTION"
        - echo "CF_PULL_REQUEST_TARGET=$CF_PULL_REQUEST_TARGET"
        - echo "RELEASE_VERSION=$RELEASE_VERSION"
      create_alpine_deps:
        title: Build Alpine dependencies
        image: codefresh/cli:latest
        entry_point: /bin/sh
        commands:
        - rm -rf docker/alpine/tmpdir
        - mkdir -p docker/alpine/tmpdir/bin docker/alpine/tmpdir/root
        - cp -p bin/* docker/alpine/tmpdir/bin/
        - cp -p config/bashrc docker/alpine/tmpdir/root/.bashrc
        - cp -p config/vimrc docker/alpine/tmpdir/root/.vimrc
      create_python_deps:
        title: Build Python dependencies
        image: codefresh/cli:latest
        entry_point: /bin/sh
        commands:
        - rm -rf docker/python/tmpdir
        - mkdir -p docker/python/tmpdir/bin docker/python/tmpdir/root
        - cp -p bin/* docker/python/tmpdir/bin/
        - cp -p config/bashrc docker/python/tmpdir/root/.bashrc
        - cp -p config/vimrc docker/python/tmpdir/root/.vimrc

  build_bases_images:
    stage: build
    type: parallel
    steps:
      build_alpine_base:
        title: Build Alpine base image
        type: build
        image_name: drtuxwang/alpine-base
        tag: '3.8'
        working_directory: docker/alpine
        dockerfile: Dockerfile-base

  push_bases_images:
    stage: build
    type: parallel
    steps:
      push_alpine_base:
        title: Push Alpine base image
        type: push
        candidate: '${{build_alpine_base}}'
        tag: '3.8'
        registry: dockerhub

  build_images:
    stage: build
    type: parallel
    steps:
      build_alpine:
        title: Build Alpine image
        type: build
        image_name: drtuxwang/alpine
        tag: '3.8'
        working_directory: docker/alpine
        dockerfile: Dockerfile
      build_python:
        title: Build python image
        type: build
        image_name: drtuxwang/python
        tag: '3.6'
        working_directory: docker/python
        dockerfile: Dockerfile

##  docker_tests:

##  docker_push:
