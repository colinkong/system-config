version: '1.0'

stages:
- default
- build
- package
- push
- test

steps:
  main_clone:
    title: Cloning main repository
    stage: default
    type: git-clone
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_REVISION}}"
    git: drtuxwang

  setup_config:
    title: Setup configurations
    stage: default
    image: codefresh/cli:latest
    entry_point: /bin/sh
    commands:
    - ls -ld ${{CF_VOLUME_PATH}}/* ${{CF_VOLUME_PATH}}/${{CF_REPO_NAME}}/*
    - env | grep ^CF_ | sort
    - cf_export RELEASE_VERSION=$(git describe --tags --match "v[0-9]*" --long)
    - cf_export ALPINE_BASE=$(grep "^BASE_IMAGE" docker/alpine/Makefile | sed -e "s/.* //")
    - cf_export PYTHON_BASE=$(grep "^BASE_IMAGE" docker/python/Makefile | sed -e "s/.* //")
    - cf_export SUDO_BASE=$(grep "^BASE_IMAGE" docker/sudo/Makefile | sed -e "s/.* //")
    - codefresh get contexts

  preparations:
    title: Prepare for build
    stage: build
    type: parallel
    steps:
      create_alpine_deps:
        title: Build Alpine dependencies
        image: codefresh/cli:latest
        entry_point: /bin/sh
        commands:
        - rm -rf docker/alpine/bash/tmpdir
        - mkdir -p docker/alpine/bash/tmpdir/bin docker/alpine/bash/tmpdir/root
        - cp -p bin/* docker/alpine/bash/tmpdir/bin/
        - cp -p config/bashrc docker/alpine/bash/tmpdir/root/.bashrc
        - cp -p config/vimrc docker/alpine/bash/tmpdir/root/.vimrc
      create_python_deps:
        title: Build Python dependencies
        image: codefresh/cli:latest
        entry_point: /bin/sh
        commands:
        - rm -rf docker/python/tmpdir
        - mkdir -p docker/python/tmpdir/bin docker/python/tmpdir/root
        - cp -p bin/* docker/python/tmpdir/bin/
        - cp -p config/bashrc docker/python/tmpdir/root/.bashrc
        - cp -p config/vimrc docker/python/tmpdir/root/.vimrc

  build_alpine:
    stage: package
    title: Build Alpine base image
    type: build
    image_name: drtuxwang/alpine
    tag: 'latest'
    working_directory: docker/alpine
    dockerfile: Dockerfile
    build_arguments:
    - BASE_IMAGE=${{ALPINE_BASE}}
  push_alpine:
    stage: push
    title: Push Alpine base image
    type: push
    registry: dockerhub
    candidate: ${{build_alpine}}
    tag: 'latest'

  docker_builds:
    title: Package Docker images
    stage: package
    type: parallel
    steps:
      build_alpine_bash:
        title: Build Alpine image
        type: build
        image_name: drtuxwang/alpine-base
        tag: 'latest'
        working_directory: docker/alpine/bash
        dockerfile: Dockerfile
      build_python:
        title: Build Python image
        type: build
        image_name: drtuxwang/python
        tag: 'latest'
        working_directory: docker/python
        dockerfile: Dockerfile
        build_arguments:
        - BASE_IMAGE=${{PYTHON_BASE}}
      build_sudo:
        title: Build Sudo image
        type: build
        image_name: drtuxwang/scratch
        tag: 'latest'
        working_directory: docker/sudo
        dockerfile: Dockerfile
        build_arguments:
        - BASE_IMAGE=${{SUDO_BASE}}

  docker_pushes:
    title: Push Docker images
    stage: push
    type: parallel
    steps:
      push_alpine:
        title: Push Alpine image
        type: push
        registry: dockerhub
        candidate: ${{build_alpine_bash}}
        tag: 'latest'
      push_python:
        title: Push Python image
        type: push
        registry: dockerhub
        candidate: ${{build_python}}
        tag: 'latest'
      push_sudo:
        title: Push Sudo image
        type: push
        registry: dockerhub
        candidate: ${{build_sudo}}
        tag: 'latest'

  python_tests:
    title: Run Python tests
    stage: test
    image: ${{build_python}}
    commands:
    - make install test
