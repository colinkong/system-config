#!/bin/bash -u
#
# Run Docker Debian sandbox (no dri, ipc, net, snd, root & x11 defaults)
#

IMAGE="drtuxwang/debian-xfce:10"
NAME="debian10-sandbox"
HOSTNAME="debian10-sandbox"
LOCALPORT="2222"

DOCKER_RUN_FLAGS=" --rm -it --publish $LOCALPORT:22 --name $NAME --hostname $HOSTNAME "
NETWORK=none
SANDBOX=owner:users
while [ $# -gt 0 ]
do
    case $1 in
    -dri)
        DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --device=/dev/dri:/dev/dri"
        ;;
    -ipc)
        DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --ipc=host"
        ;;
    -net)
        if [ "$NETWORK" != "host" ]
        then
            NETWORK="bridge"
        fi
        ;;
    -root)
        SANDBOX="0:0"
        ;;
    -snd)
        DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --device=/dev/snd:/dev/snd"
        ;;
    -ssh)
        NETWORK="bridge"
        ;;
    -user)
        SANDBOX="$(id -u):$(id -g)"
        ;;
    -vnc)
        NETWORK="bridge"
        DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --env SVNCSERVER=1 "
        ;;
    -v=*)
        MOUNT=${1#*=}
        DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --volume=${MOUNT%:ro}:$MOUNT"
        ;;
    -x11)
        DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --volume=/tmp/.X11-unix:/tmp/.X11-unix --env DISPLAY=$DISPLAY --env XAUTH=\"$(xauth list $DISPLAY)\""
        ;;
    -*)
        echo "usage: $0 [-dri] [-net] [-root] [-snd] [-user] [-vnc] [-v=<path>[:ro]] [-x11] [command]"
        echo
        echo "optional arguments:"
        echo "   -dri                  Enable direct rendering device access."
        echo "   -ipc                  Enable shmem for internet process communications."
        echo "   -net                  Enable network device access."
        echo "   -root                 Run as root user (Default sandbox user)."
        echo "   -snd                  Enable sound device access."
        echo "   -user                 Run as host user & group (Default sandbox user)."
        echo "   -v=<path>[:ro]        Bind mount a volume (ie \"-v=/path\" & \"-v=/path:ro\")"
        echo "   -x11                  Enable X11 display access."
        exit 1
        ;;
    *)
        break
        ;;
    esac
    shift
done

# Share current working directory
DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --volume=$PWD:/vol/app --workdir=/vol/app"

# Network
DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --network=$NETWORK"

# Sandbox user
if [ "$SANDBOX" = "sandbox:users" ]
then
    DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --user=$SANDBOX"
elif [ "$SANDBOX" != "0:0" ]
then
    DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --volume=/etc/passwd:/etc/passwd:ro --volume=/etc/group:/etc/group:ro --user=$SANDBOX"
fi

docker run $DOCKER_RUN_FLAGS --env SSH_PUBKEY="$(cat ~/.ssh/id_rsa.pub)" $IMAGE "$@"
