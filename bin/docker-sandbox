#!/usr/bin/env bash
#
# Run Docker sandbox with current directory mounted
#

set  -u

IMAGE="drtuxwang/debian-dev:stable"
LOCALPORT="2222"

DOCKER_RUN_FLAGS=" --rm -it --publish $LOCALPORT:22"
NETWORK=none
SANDBOX="$(id -u):$(id -g)"
while [ $# -gt 0 ]
do
    case $1 in
    -image=*)
        IMAGE=${1#*=}
        ;;
    -net)
        if [ "$NETWORK" != "host" ]
        then
            NETWORK="bridge"
        fi
        ;;
    -root)
        SANDBOX="0:0"
        ;;
    -*)
        echo "usage: $0 [-image=<image>] [-net] [-root] [command]"
        echo
        echo "optional arguments:"
        echo "   -image=<image>        Docker image (Default \"drtuxwang/debian-xfce:stable\"."
        echo "   -net                  Enable network device access."
        echo "   -root                 Run as root user (Default real user and group)."
        exit 1
        ;;
    *)
        break
        ;;
    esac
    shift
done

# Container name and hostname
NAME=$(basename $IMAGE | sed -e "s/:/-/")
HOSTNAME="$NAME"
DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --name $NAME --hostname $HOSTNAME"

# Share current working directory
DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --volume=$PWD:/vol/sandbox --workdir=/vol/sandbox"

# Network
DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --network=$NETWORK"

# Sandbox user
if [ "$SANDBOX" != "0:0" ]
then
    DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --volume=/etc/passwd:/etc/passwd:ro --volume=/etc/group:/etc/group:ro --user=$SANDBOX"
fi

docker run $DOCKER_RUN_FLAGS --env SSH_PUBKEY="$(cat ~/.ssh/id_rsa.pub)" $IMAGE "$@"
