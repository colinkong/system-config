#
# $HOME/.login for csh/tcsh shells
#
# 1) Create "$HOME/.login-2bash" to auto switch to bash shell
# 2) Create "$HOME/.login-local" for local settings
#

##set verbose

if ( $?TERM && -e "`\tty`" ) then
    if ( -f $HOME/.login-2bash && -f /bin/bash ) then
        setenv ENV $HOME/.profile
        exec /bin/bash -l
    else if ( "$TERM" == "xterm-256color" ) then
        setenv TERM xterm
    endif

    # Terminal Multiplexer
    if ( "`tmux -V |& \grep '^tmux '`" != "" ) then
        if ( $?TMUX ) then
            if ( ! $?MYSCREEN ) then
                setenv MYSCREEN "tmux:`timeout --signal=KILL 1 tmux display-message -p '#S'`"
                unsetenv MYTTY
            endif
            alias logout 'tmux detach'
        else if ( "$TERM" == "screen" ) then
            setenv MYSCREEN "???"
            alias tmux='echo "sessions should be nested with care, already running multiplexer" #'
        endif
    endif

    # Removing soft shell limit
    foreach _limit ( `limit | \egrep -v "coredumpsize|unlimited|-" | \awk '{print $1}'` )
        if ( "`limit $_limit unlimited`" == "" ) then
            limit $_limit unlimited
        endif
    end

    # Session control
    setenv MYHNAME `uname -n | tr '[A-Z]' '[a-z]' | cut -f1 -d"."`
    setenv MYUNAME `id | sed -e 's/^[^(]*(\([^)]*\)).*$/\1/'`
    if ( $?tcsh ) then
        setenv MYSHELL "TCSH"
        set prompt="%{\033[01;32m%}[%P] %{\033[01;34m%}%~%{\n%}%{\033[01;32m%}%n@$MYHNAME%{\033[00m%} % "
    else
        setenv MYSHELL "CSH"
        set prompt="$MYUNAME@${MYHNAME}% "
    endif
    if ( $?SSH_CONNECTION ) then
        setenv MYSHELL "$MYSHELL remote"
    endif

    # Setup SSH agent
    if ( "`ps -u $MYUNAME |& grep ssh-agent`" != "" ) then
        rm -rf /tmp/ssh-*/* >& /dev/null
    endif
    setenv SSH_AUTH_SOCK `/bin/sh -c "\ls -1t /tmp/ssh-*/* 2> /dev/null | head -1"`
    if ( "$SSH_AUTH_SOCK" == "" ) then
        setenv SSH_AUTH_SOCK `/bin/sh -c "\ls -1t /var/folders/*/*/*/ssh-*/* 2> /dev/null | head -1"`  # Mac
        if ( "$SSH_AUTH_SOCK" != "" ) then
            ln -s `dirname $SSH_AUTH_SOCK` /tmp >& /dev/null
        else
            eval `ssh-agent -c` >& /dev/null
        endif
    endif
    setenv SSH_KEYS `ssh-add -l |& grep ".:." | wc -l | awk '{print $1}'`
    if ( $?MYTTY ) then
        if  ( "$MYTTY" != "`\tty`" ) then
            unsetenv MYTTY
        endif
    endif

    # Setup terminal
    if ( $?MYTTY ) then
        alias logout 'echo Use \"exit\" to exit the shell.'
    else
        setenv MYSHELL "$MYSHELL login"
        if ( "$TERM" == "dumb" ) then
            setenv MYTTY "/dev/???"
        else
            setenv MYTTY `\tty`
            setenv GPG_TTY "$MYTTY"
            (mesg y) >& /dev/null
            set autologout=0
            stty erase "^?"  #  alternative
            stty intr 
            stty susp 
        endif
        if ( $?SSH_CONNECTION ) then
            alias exit 'echo Use \"logout\" to leave the remote login shell.'
        else
            alias exit 'echo Use \"logout\" to leave the login shell.'
        endif
        alias exec ''
    endif

    # General stuff
    umask 027
    setenv LC_COLLATE C
    setenv EDITOR vi
    setenv LESSHISTFILE /dev/null
    setenv PYTHONDONTWRITEBYTECODE 1
    setenv TMPDIR "/tmp/$MYUNAME"
    setenv TMP "/tmp/$MYUNAME"
    mkdir -p $TMP/.cache
    ls -ld $TMP $HOME/Desktop $HOME/Desktop/private $HOME/.ssh $HOME/.??*/* |& \
        grep -v "[-]----- " | awk '{print $NF}' | xargs -n 1 chmod go= >& /dev/null
    if ( ! -l $HOME/.cache ) then
        rm -rf $HOME/.cache
        ln -s $TMP/.cache $HOME/.cache
    endif
    set history=1024

    # Save/load default settings (PATH, MANPATH, LM_LICENSE_FILE, DSOPATH)
    if ( ! $?BASE_PATH ) then
        if ( ! $?MANPATH ) then
            setenv MANPATH :
        endif
        if ( ! $?LM_LICENSE_FILE ) then
            setenv LM_LICENSE_FILE :
        endif
        if ( ! $?LD_LIBRARY_PATH ) then
            setenv LD_LIBRARY_PATH :
        endif
        setenv BASE_PATH $PATH
        setenv BASE_LM_LICENSE_FILE $LM_LICENSE_FILE
        setenv BASE_LD_LIBRARY_PATH $LD_LIBRARY_PATH
        setenv BASE_PYTHONPATH $PYTHONPATH
        setenv BASE_MANPATH $MANPATH
    else
        setenv PATH $BASE_PATH
        setenv LM_LICENSE_FILE $BASE_LM_LICENSE_FILE
        setenv LD_LIBRARY_PATH $BASE_LD_LIBRARY_PATH
        setenv PYTHONPATH $BASE_PYTHONPATH
        setenv MANPATH $BASE_MANPATH
    endif

    # Fix command aliases
    if ( "`which ssudo |& \grep '/ssudo'`" != "" ) then
        alias sudo ssudo
    endif
    if ( "`which htop |& \grep '/htop'`" != "" ) then
        alias top htop
    endif
    alias df "df -k"
    alias du "du -k"
    alias ftp "ftp -i -v"
    alias h history 256
    alias ls "ls -C"
    alias quota "quota -v"
    if ( -x /usr/bin/vim ) then
        alias vi "vim -N -n -i NONE -T xterm"
    endif
    if ( -x /usr/sbin/ping ) then
        alias ping "/usr/sbin/ping"
    else if ( -x /usr/etc/ping ) then
        alias ping "/usr/etc/ping"
    endif
    if ( -f "$HOME/.ssh/config" ) then
        if ( "`\ssh -version |& \grep '^OpenSSH_'`" != "" ) then
            alias scp "scp -F $HOME/.ssh/config -o ServerAliveInterval=1799"
        else
            alias scp "scp -F $HOME/.ssh/config"
        endif
    endif
    unalias cp cd.. d l ll la lsd mv p rm s which >& /dev/null

    # mkinst, cdinst, mksrc, cdsrc, mktest, cdtest, scd
    foreach _dir (inst src test)
        alias mk$_dir 'setenv cd'$_dir' "$PWD" && echo "cd'$_dir'=$cd'$_dir'"'
        alias cd$_dir 'echo "cd \"$cd'$_dir'\"" && cd "$cd'$_dir'"'
        if ( ! $?cdtest ) then
            setenv cd$_dir "$PWD"
        endif
    end
    alias scd 'env | egrep "^cd(inst|src|test)=" | sort'

    # Platform specific
    switch (`uname`)
    case Darwin:
        if ( "`\ls --help |& \grep '^ *--time-style'`" != "" ) then
            alias ls "ls -C --time-style=long-iso --color=auto"
            alias grep "grep --color=auto"
            alias egrep "egrep --color=auto"
        else
            alias ls "ls -C -G"
        endif
        breaksw

    case HP-UX:
        alias df "bdf"
        breaksw

    case Linux:
    case *NT*:
        if ( "`\ls --help |& \grep '^ *--time-style'`" != "" ) then
            alias ls "ls -C --time-style=long-iso --color=auto"
        else
            alias ls "ls -C --color=auto"
        endif
        if ( "`\grep --help |& \grep '^ *--color'`" != "" ) then
            alias grep "grep --color=auto"
            alias egrep "egrep --color=auto"
        endif
        setenv LS_COLORS ""
        breaksw
    endsw
    setenv PATH "$HOME/software/scripts:$HOME/software/bin:/opt/software/bin:$PATH"

    # Change to $HOME/Desktop
    mkdir $HOME/Desktop >& /dev/null
    if ( "$PWD" == "$HOME" ) then
        cd "$HOME/Desktop"
    endif

    # Applying optional settings
    if ( -f $HOME/.login-opt ) then
        source $HOME/.login-opt
    endif

    # Shell information
    echo
    setenv MYINFO "$MYSHELL shell (tty=$MYTTY)"
    if ( "$SSH_KEYS" != 0 ) then
        setenv MYINFO "$MYINFO, ssh-add=$SSH_KEYS"
    endif
    if ( $?MYSCREEN ) then
        setenv MYINFO "$MYINFO, screen=$MYSCREEN"
    endif
    setenv MYINFO "$MYINFO)"
    echo "$MYINFO"
    echo

endif
