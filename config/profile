#
# $HOME/.profile for sh/ksh/bash shells
#
# 1) Create "$HOME/.profile-2bash" to auto switch to bash shell
# 2) Create "$HOME/.profile-local" for local settings
#

##set -x

if [ "$TERM" -a "`\tty 2> /dev/null | \grep -v ' '`" ]; then
    # Session control
    if [ -x "/usr/bin/tmux" ]; then
        if [ "$TMUX" ]; then
            if [ ! "$TMUX_SHELL" ]; then
                export TMUX_SHELL="$$"
            fi
        elif [ ! "$SSH_CONNECTION" ]; then
            SESSION=`tmux ls | grep -v attached | head -1 | cut -f1 -d:`
            if [ "$SESSION" ]; then
                exec /usr/bin/tmux attach -t $SESSION
            else
                exec /usr/bin/tmux new
            fi
        fi
    fi

    if [ ! "$BASH" -a -f $HOME/.profile-2bash -a -f /bin/bash ]; then
        export ENV=$HOME/.profile; exec /bin/bash -l
    fi
    echo
    echo "Processing Startup script ($HOME/.profile)"

    # Check terminal and login shell
    export MYHNAME=`uname -n | tr '[A-Z]' '[a-z]' | cut -f1 -d"."`
    export MYUNAME=`id | sed -e 's/^[^(]*(\([^)]*\)).*$/\1/'`
    if [ "$TERM" = "dumb" ]; then
        MYTTY="/dev/???"
    else
        MYTTY=`\tty 2> /dev/null`
        (mesg y) > /dev/null 2>&1
        if [ "$TMOUT" != 0 ]; then
            export TMOUT=0
        fi
        stty erase "^?" 2> /dev/null  #  alternative
        stty intr  2> /dev/null
        stty susp  2> /dev/null
    fi

    for LIMIT in `\ulimit -a 2> /dev/null | \cut -c1`; do
        \ulimit -$LIMIT `\ulimit -$LIMIT -H 2> /dev/null` 2> /dev/null
    done

    if [ "$BASH" ]; then
        echo "Running    Login shell /bin/bash (Bash Shell) on $MYTTY ($TERM)"
        PS1='\[\033[01;32m\]\u@\h:\[\033[34m\]\w\[\033[31m\]$(__git_ps1 2> /dev/null)\[\033[00m\] \$ '
        precmd() {
            \echo -e "\033]0;$MYHNAME:$PWD\007\c"
        }
        PROMPT_COMMAND="precmd"
        preexec() {
            \echo -e "\033]0;$MYHNAME:$PWD $ $BASH_COMMAND\007\c"
        }
        trap 'preexec' DEBUG

        complete -f -o default tar
        complete -f -o default wine
        set -o ignoreeof
    elif [ "`echo $0 | \grep \"ksh$\"`" ]; then
        echo "Running    Login shell /bin/ksh (Korn Shell) on $MYTTY ($TERM)"
        PS1="$MYUNAME@${MYHNAME}_$ "
        set -o emacs
        alias -x __A=$(print '\020' 2> /dev/null) 2> /dev/null # up    = Last line
        alias -x __B=$(print '\016' 2> /dev/null) 2> /dev/null # down  = Next line
        alias -x __C=$(print '\006' 2> /dev/null) 2> /dev/null # right = Move right
        alias -x __D=$(print '\002' 2> /dev/null) 2> /dev/null # left  = Move left
    else
        echo "Running    Login shell /bin/sh (Bourne Shell) on $MYTTY ($TERM)"
    fi

    # Storing/Applying default settings (PATH, MANPATH, LM_LICENSE_FILE, DSOPATH)
    if [ ! "$BASE_LD_LIBRARY_PATH" ]; then
        if [ ! "$BASE_MANPATH" ]; then
            export BASE_MANPATH=:
        fi
        if [ ! "$LM_LICENSE_FILE" ]; then
            export LM_LICENSE_FILE=:
        fi
        if [ ! "$LD_LIBRARY_PATH" ]; then
            export LD_LIBRARY_PATH=:
        fi

        echo "Storing    Default settings (PATH, MANPATH, LM_LICENSE_FILE, LD_LIBRARY_PATH)"
        export BASE_PATH=$PATH
        export BASE_MANPATH=$MANPATH
        export BASE_LM_LICENSE_FILE=$LM_LICENSE_FILE
        export BASE_LD_LIBRARY_PATH=$LD_LIBRARY_PATH
    else
        echo "Applying   Default settings (PATH, MANPATH, LM_LICENSE_FILE, LD_LIBRARY_PATH)"
        case `uname` in
        *NT*)
            export PATH=`/bin/cygpath --unix --path "$BASE_PATH"`
            export MANPATH=`/bin/cygpath --unix --path "$BASE_MANPATH"`
            export LM_LICENSE_FILE=`/bin/cygpath --unix --path "$BASE_LM_LICENSE_FILE"`
            ;;
        *)
            export PATH=$BASE_PATH
            export MANPATH=$BASE_MANPATH
            export LM_LICENSE_FILE=$BASE_LM_LICENSE_FILE
            ;;
        esac
        export LD_LIBRARY_PATH=$BASE_LD_LIBRARY_PATH
    fi

    # General stuff
    rm()
    {
        if [ "`echo \" $@ \" | grep \" $HOME/* \"`" ]; then
            echo "rm: Removing \"$HOME\" home directory is dangerous."
        else
            /bin/rm "$@"
        fi
    }
    umask 027
    export LC_COLLATE=C
    export HISTFILE=
    export _POSIX2_VERSION=199209
    export PYTHONDONTWRITEBYTECODE=1
    export TMP=/tmp; export TMPDIR=$TMP; rm -rf $HOME/tmp 2> /dev/null
    export WINEDITOR=vi
    ENV=

    alias df="df -k"
    alias du="du -k"
    if [ "$SHLVL" = 1 ]; then
        alias exit='echo Use \"logout\" to logout.'
    fi
    alias ftp="ftp -i -v"
    if [ "$BASH" ]; then
        alias h="history 256"
    else
        alias h='fc -l 1 2> /dev/null | tail -256'
    fi
    alias ls="ls -C"
    alias quota="quota -v"
    alias resize='resize; eval `\\resize`'
    if [ -x /usr/bin/vim ]; then
        alias vi="vim -N -n -i NONE -T xterm"
    fi
    if [ -x /usr/sbin/ping ]; then
        alias ping="/usr/sbin/ping"
    elif [ -x /usr/etc/ping ]; then
        alias ping="/usr/etc/ping"
    fi
    if [ -f $HOME/.ssh/config ]; then
        if [ "`ssh -version 2>&1 | grep \"^OpenSSH_\"`" ]; then
            alias scp="scp -F $HOME/.ssh/config -o ServerAliveInterval=1799"
        else
            alias scp="scp -F $HOME/.ssh/config"
        fi
    fi
    unalias cp cd.. d l ll la lsd mv p rm s which 2> /dev/null

    # Change to $HOME/Desktop
    mkdir $HOME/Desktop 2> /dev/null
    chmod go= $HOME/Desktop .??*/* 2> /dev/null
    if [ "$PWD" = "$HOME" ]; then
        cd "$HOME/Desktop"
    fi

    # cd[a-z], mk[a-z], scd
    if [ ! "$cdz" ]; then
        for DIR in a b c d e f g h i j k l m n o p q r s t u v w x y z; do
            export cd$DIR="$PWD"
        done
    fi
    for DIR in a b c d e f g h i j k l m n o p q r s t u v w x y z; do
        alias mk$DIR='export cd'$DIR'="$PWD"; echo "cd'$DIR'=$cd'$DIR'"'
        alias cd$DIR='echo "cd \"$cd'$DIR'\""; cd "$cd'$DIR'"'
    done
    alias scd='env | grep "^cd[a-z]=" | grep -v "=$HOME/Desktop$" | sort'

    # Platform specific
    case `uname` in
    Darwin)
        if [ -d /usr/local/opt/coreutils/libexec/gnubin ]; then
            export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
            alias ls="ls -C --time-style=long-iso --color=always"
        else
            alias ls="ls -C -G"
        fi
        ;;

    Linux|*NT*)
        if [ "`\ls --help 2>&1 | \grep \" --time-style\"`" ]; then
            alias ls="ls -C --time-style=long-iso --color=always"
        else
            alias ls="ls -C --color=always"
        fi
        # Defend against stubborn Linux distributions
        if [ -f /etc/ksh.kshrc ]; then
            alias test='return 2> /dev/null'
        fi
        unset CDPATH LS_COLORS
        unset command_not_found_handle
        ;;
    esac
    export PATH="$HOME/software/bin:/opt/software/bin:$HOME/.local/bin:$PATH"

    # Applying local settings
    if [ -f $HOME/.profile-local ]; then
        echo "Applying   Local settings ($HOME/.profile-local)"
        . $HOME/.profile-local
    fi
    echo

fi
